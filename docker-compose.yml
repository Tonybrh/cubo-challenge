version: '3.8'

services:
  db:
    image: postgres:13
    container_name: cubo_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U laravel -d laravel"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cubo-network

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: cubo_backend
    volumes:
      - ./back:/var/www/html
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cubo-network

  backend-setup:
    build:
      context: ./back
    container_name: cubo_backend_setup
    command: >
      sh -c "
      echo 'Aguardando PostgreSQL...';
      while ! (timeout 2 bash -c 'cat < /dev/null > /dev/tcp/db/5432'); do
        sleep 2;
        echo -n '.';
      done;
      
      echo -e '\nPostgreSQL pronto!';
      php artisan migrate --force;
      php artisan db:seed --force;
      echo 'Banco inicializado com sucesso!'
      "
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cubo-network

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./front:/app
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - cubo-network

  nginx:
    image: nginx:alpine
    container_name: cubo_nginx
    ports:
      - "8081:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./back/public:/var/www/html
    depends_on:
      - backend
    networks:
      - cubo-network

networks:
  cubo-network:
    driver: bridge

volumes:
  postgres_data:
